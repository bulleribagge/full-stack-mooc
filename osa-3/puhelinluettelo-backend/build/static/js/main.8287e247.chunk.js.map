{"version":3,"sources":["components/personsList.js","components/personForm.js","components/filter.js","components/notification.js","personService.js","App.js","index.js"],"names":["PersonsList","_ref","list","deletePerson","react_default","a","createElement","map","person","key","name","number","type","onClick","Object","objectSpread","PersonForm","addPerson","newName","setNewName","newNumber","setNewNumber","onSubmit","value","onChange","event","target","Filter","filter","setFilter","Notification","notification","className","success","message","getAllPersons","axios","get","then","response","data","App","_useState","useState","_useState2","slicedToArray","persons","setPersons","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","setNotification","useEffect","notifyWithTimeout","timeoutInMs","setTimeout","renderError","error","errorData","filteredList","toLowerCase","includes","components_notification","components_filter","personForm","ev","preventDefault","p","window","confirm","concat","existing","find","put","id","catch","post","personsList","delete","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8287e247.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonsList = ({list, deletePerson}) => <div>{list.map(person => <p key={person.name}>{person.name} {person.number} <button type=\"button\" onClick={() => deletePerson({...person})}>poista</button></p>)}</div>\n\nexport default PersonsList","import React from 'react'\n\nconst PersonForm = ({addPerson, newName, setNewName, newNumber, setNewNumber}) =>\n  <form onSubmit={addPerson}>\n    <div>nimi: <input value={newName} onChange={(event) => setNewName(event.target.value)}/></div>\n    <div>numero: <input value={newNumber} onChange={(event) => setNewNumber(event.target.value)}/></div>\n    <div>\n      <button type=\"submit\">lisää</button>\n    </div>\n  </form>\n\nexport default PersonForm","import React from 'react'\n\nconst Filter = ({filter, setFilter}) => <div>Rajaa näytettäviä: <input value={filter} onChange={(event) => setFilter(event.target.value)}/></div>\n\nexport default Filter","import React from 'react'\n\nimport '../notification.css'\n\nconst Notification = ({notification}) => {\n  if ('success' in notification) {\n      return <div className={notification.success ? 'success' : 'error'}>{notification.message}</div>\n  }\n  return <div />\n}\n\nexport default Notification","import axios from 'axios'\n\nconst getAllPersons = () => axios.get('/api/persons').then(response => response.data)\n\nconst addPerson = (data) => axios.post('/api/persons', data).then(response => response.data)\n\nconst deletePerson = (id) => axios.delete(`/api/persons/${id}`).then(response => response.data)\n\nconst updatePerson = (data) => axios.put(`/api/persons/${data.id}`, data).then(response => response.data)\n\nexport { getAllPersons, addPerson, deletePerson, updatePerson }","import React, { useState, useEffect } from 'react'\nimport PersonsList from './components/personsList.js'\nimport PersonForm from './components/personForm.js'\nimport Filter from './components/filter.js'\nimport Notification from './components/notification.js'\n\nimport { getAllPersons, addPerson, deletePerson, updatePerson } from './personService.js'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notification, setNotification ] = useState({})\n\n  useEffect(() => {\n    getAllPersons().then(persons => setPersons(persons))\n  }, [])\n\n  const notifyWithTimeout = (message, success, timeoutInMs) => {\n    setNotification({message, success})\n    setTimeout(() => {\n      setNotification({})\n    }, timeoutInMs)\n  }\n\n  const renderError = (error) => {\n    const errorData = error.response.data.error\n    if (errorData) {\n      notifyWithTimeout(errorData, false, 5000)\n    } else {\n      notifyWithTimeout(error.message, false, 5000)\n    }\n  }\n\n  const doAddPerson = (ev) => {\n    ev.preventDefault()\n    if(persons.map(p => p.name).includes(newName)) {\n      if (window.confirm(`${newName} on jo luettelossa, korvataanko vanha numero uudella?`)) {\n        const existing = persons.find(p => p.name.includes(newName))\n        updatePerson({...existing, number: newNumber})\n        .then(() => getAllPersons())\n        .then(persons => setPersons(persons))\n        .then(() => notifyWithTimeout(`Päivitettiin henkilön ${newName} puhelinnumero`, true))\n        .catch(error => renderError(error))\n      }\n    } else {\n      const newPerson = {name: newName, number: newNumber}\n      addPerson(newPerson).then(() => getAllPersons())\n        .then(persons => setPersons(persons))\n        .then(() => notifyWithTimeout(`Lisättiin ${newName} puhelinluetteloon`, true))\n        .catch(error => renderError(error))\n    }\n  }\n\n  const byNamefilter = (person) => person.name.toLowerCase().includes(filter.toLowerCase())\n\n  const filteredList = persons.filter(byNamefilter)\n\n  const deleteWithConfirm = ({id, name}) => { \n    if (window.confirm(`Haluatko todella poistaa henkilön ${name}?`)) { \n        deletePerson(id)\n          .then(() => notifyWithTimeout(`Poistettiin ${name} puhelinluettelosta`, true, 3000))\n          .catch(() => notifyWithTimeout(`Henkilö ${name} oli jo poistettu`, false, 5000))\n        // It is assumed that in case of an error the person was already removed (in another session);\n        // thus, we filter out the person regardless of response code.\n        setPersons(persons.filter(p => p.id !== id))\n      }\n    }\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n      <Notification notification={notification} />\n      <Filter filter={filter} setFilter={setFilter} />\n      <h3>Lisää uusi</h3>\n      <PersonForm addPerson={doAddPerson} newName={newName} setNewName={setNewName} newNumber={newNumber} setNewNumber={setNewNumber} />\n      <h2>Numerot</h2>\n      <PersonsList list={filteredList} deletePerson={deleteWithConfirm}/>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}